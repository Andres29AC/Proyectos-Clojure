{"version":3,"sources":["pushy/core.cljs"],"mappings":"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","names":["pushy.core/on-click","funk","goog.events/listen","js/document","pushy.core/update-history!","h","G__6129","pushy.core/set-retrieve-token!","t","path-prefix","location","pushy.core/set-create-url!","token","var_args","G__6131","pushy.core/new-history","js/Error","pushy.core.new_history","js/goog.history.Html5History.TokenTransformer","transformer","js/goog.history.Html5History","js/window","pushy$core$IHistory$set_token_BANG_$dyn","x__5350__auto__","m__5351__auto__","pushy.core/set-token!","goog/typeOf","m__5349__auto__","cljs.core/missing-protocol","G__6133","pushy$core$IHistory$replace_token_BANG_$dyn","pushy.core/replace-token!","G__6135","pushy$core$IHistory$get_token$dyn","pushy.core/get-token","pushy$core$IHistory$start_BANG_$dyn","pushy.core/start!","pushy$core$IHistory$stop_BANG_$dyn","pushy.core/stop!","pushy.core/IHistory","this","title","pushy.core/processable-url?","uri","clojure.string/blank?","cljs.core/not","cljs.core/re-matches","cljs.core/re-pattern","js/location","pushy.core/get-token-from-uri","path","query","fragment","G__6136","cljs.core/seq","pushy.core/valid-link?","el","and__5000__auto__","G__6138","fexpr__6137","args__5732__auto__","len__5726__auto__","i__5727__auto__","argseq__5733__auto__","cljs.core/IndexedSeq","pushy.core/pushy","p__6163","map__6167","cljs.core/--destructure-map","cljs.core.get","seq6145","G__6146","cljs.core/first","cljs.core/next","G__6147","self__5711__auto__","dispatch-fn","match-fn","processable-url?","identity-fn","prevent-default-when-no-match?","cljs.core/identity","cljs.core/constantly","history","event-keys","cljs.core.atom","pushy.core/t_pushy$core6181","_","cljs.core.swap_BANG_","cljs.core/conj","goog.history.EventType/NAVIGATE","e","temp__5804__auto__","match","G__6201","G__6202","G__6203","G__6204","G__6205","goog.dom/getAncestor","js/goog.Uri","cljs.core._EQ_","next-token","G__6208","temp__5802__auto__","seq__6210","cljs.core/deref","chunk__6211","count__6212","i__6213","cljs.core/chunked-seq?","c__5525__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","key","goog.events/unlistenByKey","cljs.core/reset!","G__6218","pushy.core/supported?","pushy.core.supported_QMARK_","window","G__6220","pushy.core/push-state!","pushy.core.push_state_BANG_","pushy.core.pushy"],"sourcesContent":["(ns pushy.core\n  (:require [goog.dom :as dom]\n            [goog.events :as events]\n            [clojure.string])\n  (:import goog.History\n           goog.history.Html5History\n           goog.history.Html5History.TokenTransformer\n           goog.history.EventType\n           goog.Uri))\n\n(defn- on-click [funk]\n  (events/listen js/document \"click\" funk))\n\n(defn- update-history! [h]\n  (doto h\n    (.setUseFragment false)\n    (.setPathPrefix \"\")\n    (.setEnabled true)))\n\n(defn- set-retrieve-token! [t]\n  (set! (.. t -retrieveToken)\n        (fn [path-prefix location]\n          (str (.-pathname location)\n               (.-search location)\n               (.-hash location))))\n  t)\n\n(defn- set-create-url! [t]\n  (set! (.. t -createUrl)\n        (fn [token path-prefix location]\n          (str path-prefix token)))\n  t)\n\n(defn new-history\n  ([]\n   (new-history (-> (TokenTransformer.) set-retrieve-token! set-create-url!)))\n  ([transformer]\n   (-> (Html5History. js/window transformer) update-history!)))\n\n(defprotocol IHistory\n  (set-token! [this token] [this token title])\n  (replace-token! [this token] [this token title])\n  (get-token [this])\n  (start! [this])\n  (stop! [this]))\n\n(defn- processable-url? [uri]\n  (and (not (clojure.string/blank? uri))                    ;; Blank URLs are not processable.\n       (or (and (not (.hasScheme uri)) (not (.hasDomain uri))) ;; By default only process relative URLs + URLs matching window's origin\n           (some? (re-matches (re-pattern (str \"^\" (.-origin js/location) \".*$\"))\n                              (str uri))))))\n\n(defn- get-token-from-uri [uri]\n  (let [path (.getPath uri)\n        query (.getQuery uri)\n        fragment (.getFragment uri)]\n    (cond-> path\n      (seq query) (str \"?\" query)\n      (seq fragment) (str \"#\" fragment))))\n\n(defn- valid-link? [el]\n  (and (#{\"A\" \"AREA\"} (.-tagName el))\n       (.hasAttribute el \"href\")))\n\n(defn pushy\n  \"Takes in three functions:\n    * dispatch-fn: the function that dispatches when a match is found\n    * match-fn: the function used to check if a particular route exists\n    * identity-fn: (optional) extract the route from value returned by match-fn\"\n  [dispatch-fn match-fn &\n   {:keys [processable-url? identity-fn prevent-default-when-no-match?]\n    :or   {processable-url?               processable-url?\n           identity-fn                    identity\n           prevent-default-when-no-match? (constantly false)}}]\n\n  (let [history (new-history)\n        event-keys (atom nil)]\n    (reify\n      IHistory\n      (set-token! [_ token]\n        (. history (setToken token)))\n      (set-token! [_ token title]\n        (. history (setToken token title)))\n\n      (replace-token! [_ token]\n        (. history (replaceToken token)))\n      (replace-token! [_ token title]\n        (. history (replaceToken token title)))\n\n      (get-token [_]\n        (.getToken history))\n\n      (start! [this]\n        (stop! this)\n        ;; We want to call `dispatch-fn` on any change to the location\n        (swap! event-keys conj\n               (events/listen history EventType.NAVIGATE\n                              (fn [e]\n                                (when-let [match (-> (.-token e) match-fn identity-fn)]\n                                  (dispatch-fn match)))))\n\n        ;; Dispatch on initialization\n        (when-let [match (-> (get-token this) match-fn identity-fn)]\n          (dispatch-fn match))\n\n        (swap! event-keys conj\n               (on-click\n                (fn [e]\n                  (when-let [el (some-> e .-target (dom/getAncestor valid-link? true))]\n                    (let [uri (.parse Uri (.-href el))]\n                      ;; Proceed if `identity-fn` returns a value and\n                      ;; the user did not trigger the event via one of the\n                      ;; keys we should bypass\n                      (when (and (processable-url? uri)\n                                 ;; Bypass dispatch if any of these keys\n                                 (not (.-altKey e))\n                                 (not (.-ctrlKey e))\n                                 (not (.-metaKey e))\n                                 (not (.-shiftKey e))\n                                 ;; Bypass if target = _blank\n                                 (not (get #{\"_blank\" \"_self\"} (.getAttribute el \"target\")))\n                                 ;; Bypass if explicitly instructed to ignore this element\n                                 (or (not (.hasAttribute el \"data-pushy-ignore\"))\n                                     (= (.getAttribute el \"data-pushy-ignore\") \"false\"))\n                                 ;; Only dispatch on left button click\n                                 (= 0 (.-button e)))\n                        (let [next-token (get-token-from-uri uri)]\n                          (if (identity-fn (match-fn next-token))\n                            ;; Dispatch!\n                            (do\n                              (if-let [title (-> el .-title)]\n                                (set-token! this next-token title)\n                                (set-token! this next-token))\n                              (.preventDefault e))\n\n                            (when (prevent-default-when-no-match? next-token)\n                              (.preventDefault e))))))))))\n        nil)\n\n      (stop! [this]\n        (doseq [key @event-keys]\n          (events/unlistenByKey key))\n        (reset! event-keys nil)))))\n\n(defn supported?\n  \"Returns whether Html5History is supported\"\n  ([] (supported? js/window))\n  ([window] (.isSupported Html5History window)))\n\n;; Backwards compatibility with pushy <= 0.2.2\n(defn push-state!\n  ([dispatch-fn match-fn]\n   (push-state! dispatch-fn match-fn identity))\n  ([dispatch-fn match-fn identity-fn]\n   (let [h (pushy dispatch-fn match-fn :identity-fn identity-fn)]\n     (start! h)\n     h)))\n"],"x_google_ignoreList":[0]}